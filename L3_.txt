1. When would you want to use a remote repository rather than keeping all your work local?
	When I want/need to collaborate with other developers. It is also good to keep an online backup of the project.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	To avoid making local changes based on the remote that could break something (and it would be broke on both places).

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Fork - A special type of clone, but done on GitHub when we want to use someone else's repository without making changes to it (and/or we don't have access/permition to edit it).
	Clone - When a remote repository is cloned to our local machine in order for us to edit it locally.
	Branch - When a repository is divided into more than one and we keep working on both. Generally used adding a new feature or making tests that could break the main branch (branching it avoids that risk).

4. What is the benefit of having a copy of the last known state of the remote stored locally?
	That way you would have access to any change made to it in case you needed to go offline. Making it easier to understand what was done and how that would affect what you are currently doing. You would also be able to use git log and git diff to check those changes.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	I would probably use some sort of file sharing software, such as Dropbox. Then we'd manually update the files. The harder part would be to check the changes made and update the files accordingly when differences were identified. Keeping track and rolling back to earlier versions would also be really hard, as we'd have to keep files for each of them. Having access to the files would probably be easier as they would be already there and would only have to be copied.
